---
interface LifeExperience {
  id: string;
  title: string;
  description: string;
  image: string;
  location?: string;
  tags?: string[];
}

const lifeExperiences: LifeExperience[] = [
  {
    id: "1",
    title: "This is me",
    description:
      "I love exploring new places on my motorcycle, discovering beautiful landscapes and enjoying new adventures.",
    image:
      "https://res.cloudinary.com/dxx0t18g1/image/upload/c_fill,g_auto,h_600,w_800/v1756944000/20240420_121939-COLLAGE_cvlgzx.jpg",
    location: "Colombia",
    tags: ["Adventure", "Nature", "Photography"],
  },
  {
    id: "2",
    title: "This is my wife",
    description:
      "Exploring new places with my wife makes every adventure more meaningful. She's a big reason I enjoy life so much.",
    image:
      "https://res.cloudinary.com/dxx0t18g1/image/upload/c_fill,g_auto,h_600,w_800/v1756945632/b9db980d-20f6-4081-b4ed-3ea56a2f5b8f-COLLAGE_vhc7xw.jpg",
    location: "Colombia",
    tags: ["Love", "Companionship", "Adventure"],
  },
  {
    id: "3",
    title: "This is my family",
    description:
      "Spending time with my family is what makes life special. Every moment together creates memories and brings us closer.",
    image:
      "https://res.cloudinary.com/dxx0t18g1/image/upload/c_fill,g_auto,h_600,w_800/v1756946389/image-COLLAGE_dvhpyv.jpg",
    location: "Colombia",
    tags: ["Family", "Love", "Companionship"],
  },
];
---

<div class="life-feed">
  <div class="feed-header">
    <h2 class="text-2xl font-bold text-white mb-2">Life Experiences</h2>
    <p class="text-gray-400 mb-6">Moments and adventures that shape who I am</p>
  </div>

  <div class="feed-container">
    {
      lifeExperiences.map((experience, index) => (
        <article class="life-post" data-life-card-index={index}>
          <div class="post-image">
            <img
              src={experience.image}
              alt={experience.title}
              class="w-full h-48 object-cover rounded-t-lg"
              loading="lazy"
            />
          </div>

          <div class="post-content">
            <div class="post-header">
              <h3 class="post-title">{experience.title}</h3>
              <div class="post-meta">
                {experience.location && (
                  <span class="post-location">üìç {experience.location}</span>
                )}
              </div>
            </div>

            <p class="post-description">{experience.description}</p>

            {experience.tags && experience.tags.length > 0 && (
              <div class="post-tags">
                {experience.tags.map((tag) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            )}

            <button
              class="mt-3 text-primary hover:text-primary/80 text-sm font-medium transition-colors duration-200"
              data-life-index={index}
            >
              View Details
            </button>
          </div>
        </article>
      ))
    }
  </div>

  <!-- Expanded Card Overlay -->
  <div
    class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 hidden transition-all duration-500 ease-in-out flex items-center justify-center"
    id="life-expanded-overlay"
  >
    <div
      class="w-full max-w-4xl mx-4 bg-black border border-gray-700 rounded-lg p-6 max-h-[80vh] overflow-y-auto relative"
      id="life-expanded-content"
    >
      <!-- Close Button -->
      <button
        class="absolute top-4 right-4 text-gray-400 hover:text-white transition-colors duration-200 text-2xl font-bold z-10"
        id="life-close-expanded"
      >
        √ó
      </button>

      <!-- Content will be populated by JavaScript -->
    </div>
  </div>
</div>

<style>
  .life-feed {
    max-width: 100%;
  }

  .feed-header {
    margin-bottom: 2rem;
  }

  .feed-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .life-post {
    background: #111111;
    border: 1px solid #374151;
    border-radius: 0.5rem;
    overflow: hidden;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .life-post:hover {
    transform: translateY(-2px);
    border-color: #f43f5e;
    box-shadow: 0 4px 20px rgba(244, 63, 94, 0.1);
  }

  .post-image {
    position: relative;
    overflow: hidden;
  }

  .post-image img {
    transition: transform 0.3s ease;
  }

  .life-post:hover .post-image img {
    transform: scale(1.05);
  }

  .post-content {
    padding: 1.5rem;
  }

  .post-header {
    margin-bottom: 1rem;
  }

  .post-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #ffffff;
    margin-bottom: 0.5rem;
    line-height: 1.4;
  }

  .post-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    font-size: 0.875rem;
    color: #9ca3af;
  }

  .post-location {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  .post-description {
    color: #d1d5db;
    line-height: 1.6;
    margin-bottom: 1rem;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background: rgba(244, 63, 94, 0.1);
    color: #f43f5e;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 500;
    border: 1px solid rgba(244, 63, 94, 0.2);
  }

  /* Responsive design */
  @media (min-width: 768px) {
    .feed-container {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
      gap: 2rem;
    }
  }

  @media (max-width: 640px) {
    .post-content {
      padding: 1rem;
    }

    .post-title {
      font-size: 1.125rem;
    }

    .post-meta {
      flex-direction: column;
      gap: 0.5rem;
    }
  }

  /* Animation for new posts */
  .life-post {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;
  }

  .life-post:nth-child(1) {
    animation-delay: 0.1s;
  }
  .life-post:nth-child(2) {
    animation-delay: 0.2s;
  }
  .life-post:nth-child(3) {
    animation-delay: 0.3s;
  }
  .life-post:nth-child(4) {
    animation-delay: 0.4s;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Expanded view styles */
  #life-expanded-overlay {
    opacity: 0;
    visibility: hidden;
  }

  #life-expanded-overlay.show {
    opacity: 1;
    visibility: visible;
  }

  #life-expanded-content {
    opacity: 0;
    transform: scale(0.95);
    transition: all 0.3s ease-in-out;
  }

  #life-expanded-overlay.show #life-expanded-content {
    opacity: 1;
    transform: scale(1);
  }

  .expanded-image {
    width: 100%;
    max-height: 60vh;
    object-fit: contain;
    border-radius: 0.5rem;
    margin-bottom: 1.5rem;
  }
</style>

<script>
  (function () {
    // Completely isolate life tab JavaScript
    let currentlyExpandedLife: number | null = null;

    // Make life experiences data available for the expand function
    const lifeExperiencesData = [
      {
        id: "1",
        title: "This is me",
        description:
          "I'm a big fan of traveling to nearby towns in my country, and I absolutely love going on road trips with my motorcycle. Every journey brings new experiences and allows me to discover beautiful landscapes that I might never have seen otherwise. Over the years, I've explored beaches with golden sands, majestic mountains, lush natural parks, and countless hidden gems along the way. Each trip is an adventure, filled with moments of freedom, excitement, and a deep connection to nature. Riding my motorcycle gives me a sense of peace and joy, and these explorations have become an essential part of my life. It's one of the most enjoyable and fulfilling things I do, constantly inspiring me to seek out new places and create unforgettable memories.",
        image:
          "https://res.cloudinary.com/dxx0t18g1/image/upload/v1756944000/20240420_121939-COLLAGE_cvlgzx.jpg",
        location: "Colombia",
        tags: ["Adventure", "Nature", "Roadtrip"],
      },
      {
        id: "2",
        title: "This is my wife",
        description:
          "Traveling and exploring new places is even more special with my wife by my side. She brings joy, laughter, and meaning to every adventure we share. Whether we're hiking through lush forests, wandering vibrant city streets, or simply enjoying a quiet sunset together, her presence makes every moment richer and more memorable. Together, we create unforgettable memories, support each other's dreams, and find happiness in both the big adventures and the small, everyday experiences. She is my partner, my best friend, and a big part of why these moments are so important to me. Our journeys together have taught me the true value of companionship, love, and shared discovery, and I am endlessly grateful for every experience we share.",
        image:
          "https://res.cloudinary.com/dxx0t18g1/image/upload/v1756945632/b9db980d-20f6-4081-b4ed-3ea56a2f5b8f-COLLAGE_vhc7xw.jpg",
        location: "Colombia",
        tags: ["Love", "Companionship", "Adventure"],
      },
      {
        id: "3",
        title: "This is my family",
        description:
          "Spending quality time with my family is one of the most important things in my life. Every moment spent together creates lasting memories and strengthens our bond. Whether we're sharing a meal, playing games, or just enjoying each other's company, these moments are what truly make life special. I cherish every opportunity to be with them and create new memories together, as they are the foundation of my happiness and joy. \n\nIn our family, we love to go on weekend getaways, explore new places, and celebrate even the smallest achievements together. From beach vacations to cozy evenings at home, every experience is made better by their presence. My family supports me through every challenge and celebrates every success, reminding me of the importance of love, unity, and togetherness. These shared experiences have shaped who I am and continue to inspire me to be a better person every day.",
        image:
          "https://res.cloudinary.com/dxx0t18g1/image/upload/v1756946389/image-COLLAGE_dvhpyv.jpg",
        location: "Colombia",
        tags: ["Family", "Love", "Companionship"],
      },
    ];

    // Wait for the DOM to be ready
    document.addEventListener("DOMContentLoaded", function () {
      // Add click event listeners to all life cards
      const lifeCards = document.querySelectorAll("[data-life-card-index]");
      lifeCards.forEach((card) => {
        card.addEventListener("click", function (this: HTMLElement) {
          const index = this.getAttribute("data-life-card-index");
          if (index !== null) {
            expandLifeExperience(parseInt(index));
          }
        });
      });

      // Add click event listeners to all life toggle buttons
      const lifeToggleButtons = document.querySelectorAll("[data-life-index]");

      lifeToggleButtons.forEach((button) => {
        button.addEventListener(
          "click",
          function (this: HTMLButtonElement, event) {
            event.stopPropagation(); // Prevent event bubbling
            const index = this.getAttribute("data-life-index");
            if (index !== null) {
              expandLifeExperience(parseInt(index));
            }
          },
        );
      });

      // Add close button event listener
      const closeButton = document.getElementById("life-close-expanded");
      if (closeButton) {
        closeButton.addEventListener("click", closeLifeExpanded);
      }

      // Close on overlay click
      const overlay = document.getElementById("life-expanded-overlay");
      if (overlay) {
        overlay.addEventListener("click", function (e) {
          if (e.target === overlay) {
            closeLifeExpanded();
          }
        });
      }

      // Close on escape key
      document.addEventListener("keydown", function (e) {
        if (e.key === "Escape") {
          closeLifeExpanded();
        }
      });
    });

    function expandLifeExperience(index: number) {
      const experience = lifeExperiencesData[index];
      if (!experience) return;

      const overlay = document.getElementById("life-expanded-overlay");
      const content = document.getElementById("life-expanded-content");

      if (overlay && content) {
        // Get full image URL (remove crop parameters)
        const fullImageUrl = experience.image.replace(
          /w=\d+&h=\d+&fit=crop/,
          "w=1200&h=800&fit=cover",
        );

        // Populate content
        content.innerHTML = `
        <button 
          class="absolute top-4 right-4 text-gray-400 hover:text-white transition-colors duration-200 text-2xl font-bold"
          id="life-close-expanded"
        >
          √ó
        </button>
        
        <div class="pr-8">
          <img 
            src="${fullImageUrl}" 
            alt="${experience.title}" 
            class="expanded-image"
          />
          
          <h2 class="text-3xl font-bold text-white mb-4">${experience.title}</h2>
          
          <div class="mb-4">
            ${experience.location ? `<p class="text-gray-400 mb-4">üìç ${experience.location}</p>` : ""}
          </div>
          
          <p class="text-gray-300 text-lg leading-relaxed mb-6">${experience.description}</p>
          
          ${
            experience.tags && experience.tags.length > 0
              ? `
            <div class="mb-6">
              <h3 class="text-lg font-semibold text-white mb-3">Tags:</h3>
              <div class="flex flex-wrap gap-2">
                ${experience.tags.map((tag) => `<span class="px-3 py-1 bg-gray-800 text-gray-300 text-sm rounded-md border border-gray-600">${tag}</span>`).join("")}
              </div>
            </div>
          `
              : ""
          }
        </div>
      `;

        // Re-add close button event listener
        const newCloseButton = content.querySelector("#life-close-expanded");
        if (newCloseButton) {
          newCloseButton.addEventListener("click", closeLifeExpanded);
        }

        // Show overlay with animation
        overlay.classList.remove("hidden");
        setTimeout(() => {
          overlay.classList.add("show");
        }, 10);

        currentlyExpandedLife = index;
      }
    }

    function closeLifeExpanded() {
      const overlay = document.getElementById("life-expanded-overlay");
      if (overlay) {
        overlay.classList.remove("show");
        setTimeout(() => {
          overlay.classList.add("hidden");
        }, 500);
      }
      currentlyExpandedLife = null;
    }
  })(); // End of IIFE - completely isolates life tab JavaScript
</script>
